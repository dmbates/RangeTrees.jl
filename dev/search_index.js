var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = RangeTrees","category":"page"},{"location":"#RangeTrees","page":"Home","title":"RangeTrees","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for RangeTrees.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [RangeTrees]","category":"page"},{"location":"#RangeTrees.RangeNode","page":"Home","title":"RangeTrees.RangeNode","text":"RangeNode\n\nAn augmented, balanced, binary interval tree of intervals of integers represented as a UnitRange.\n\n```jldoctest julia> rn = RangeNode([0:0, 3:40, 10:14, 20:35, 29:98]); # example from Wikipedia page\n\njulia> intersect(40:59, rn) 2-element Vector{UnitRange{Int64}}:  40:40  40:59 ````\n\n\n\n\n\n","category":"type"},{"location":"#Base.intersect!-Union{Tuple{T}, Tuple{Array{UnitRange{T}, 1}, AbstractUnitRange, RangeNode{T}}} where T","page":"Home","title":"Base.intersect!","text":"intersect!(result::Vector{UnitRange{T}}, target::AbstractUnitRange, rn::RangeNode{T}) where {T}\n\nRecursively intersect target with the intervals in the tree rooted at rn.\n\nNon-empty intersections are pushed onto result in the same order as the intersecting nodes appear in the tree. Storing maxlast allows for the pre-order depth-first search to be truncated when a node's maxlast is less than first(target).  Because the nodes are in non-decreasing order of first(intvl) the right subtree can be skipped when last(target) < first(intvl).\n\n\n\n\n\n","category":"method"},{"location":"#RangeTrees.midrange-Union{Tuple{AbstractUnitRange{T}}, Tuple{T}} where T<:Integer","page":"Home","title":"RangeTrees.midrange","text":"midrange(rng::AbstractUnitRange{T}) where {T<:Integer}\n\nReturn the median of rng, rounding up when length(rng) is even.\n\n\n\n\n\n","category":"method"},{"location":"#RangeTrees.splitrange-Tuple{Any}","page":"Home","title":"RangeTrees.splitrange","text":"splitrange(rng)\n\nSplit rng into mid, the value of midrange, the UnitRange to the left of mid and the UnitRange to the right.\n\n\n\n\n\n","category":"method"}]
}
